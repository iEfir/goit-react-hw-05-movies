{"version":3,"file":"static/js/686.83547c06.chunk.js","mappings":"mSAGaA,EAAuBC,EAAAA,GAAAA,IAAH,6GAMpBC,EAAiBD,EAAAA,GAAAA,IAAH,sFAMdE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wHAMVI,EAAqBJ,EAAAA,GAAAA,IAAH,wHAOlBK,EAAuBL,EAAAA,GAAAA,IAAH,+F,SCsEjC,EAtFsB,WAAO,IAAD,IACpBM,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC3D,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCH,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACAC,QAAQC,IAAI,eAAgBH,IAE5BI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAQd,6GAE2BC,EAAAA,EAAAA,IAAA,iBAAoBC,OAAOV,IAAY,CAC5DW,OAAQJ,EAAWI,SAHzB,OAEUC,EAFV,OAMIb,EAAgBa,EAASC,MAN7B,wGARc,sBAoBd,OAjBAJ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBK,QAAS,oCALG,mCAkBdC,GAEO,WACLR,EAAWS,OACZ,CACF,GAAE,CAAChB,IAEJ,IAAMiB,EAAoB,WACxBd,GAAe,SAAAD,GAAW,OAAKA,CAAL,GAC3B,EAEOgB,EAAuDpB,EAAvDoB,YAAaC,EAA0CrB,EAA1CqB,MAAOC,EAAmCtB,EAAnCsB,aAAcC,EAAqBvB,EAArBuB,SAAUC,EAAWxB,EAAXwB,OAEpD,OACE,4BACE,UAACtC,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,CAAYoC,GAAI9B,EAAoB+B,QAApC,qBACCN,IACC,gBACEO,IAAG,0CAAqCP,GACxCQ,IAAKP,EACLQ,MAAO,UAIb,UAACtC,EAAD,YACE,wBAAK8B,KACL,wCAAgBC,MAChB,sCACA,uBAAIC,KACJ,mCACCC,GACCA,EAAOM,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAClB,OAAO,uBAAaD,GAALC,EAChB,WAGP,UAACxC,EAAD,YACE,qDACA,2BACE,yBACE,SAAC,KAAD,CAAMiC,GAAI,OAAQQ,QAASd,EAA3B,qBAIF,yBACE,SAAC,KAAD,CAAMM,GAAI,UAAWQ,QAASd,EAA9B,8BAMN,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/movieDetailsStyled/MovieDetailsStyled.js","pages/movieId/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  box-shadow: 0px 7px 5px -4px rgba(0, 0, 0, 0.38);\n`;\n\nexport const TumbForBtnNImg = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n`;\n\nexport const GoBackLink = styled(Link)`\n  text-decoration: none;\n  width: 90px;\n  text-align: center;\n  border: 2px solid darkgray;\n`;\nexport const AboutFilmContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 8px;\n`;\n\nexport const CastReviewsContainer = styled.div`\n  padding: 16px;\n  box-shadow: 0px 7px 5px -4px rgba(0, 0, 0, 0.38);\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Loader } from 'components/reactLoader/Loader';\nimport {\n  AboutFilmContainer,\n  CastReviewsContainer,\n  DescriptionContainer,\n  GoBackLink,\n  TumbForBtnNImg,\n} from 'components/movieDetailsStyled/MovieDetailsStyled';\n\nconst MoviesDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [responseData, setResponseData] = useState({});\n  const { movieId } = useParams();\n  const [castVisible, setCastVisible] = useState(false);\n  console.log('castVisible:', castVisible);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n    axios.defaults.params = {\n      api_key: '75d8b1353cef49a6219d2708694c471e',\n    };\n\n    async function fetchTrending() {\n      try {\n        const response = await axios.get(`/movie/${Number(movieId)}`, {\n          signal: controller.signal,\n        });\n\n        setResponseData(response.data);\n      } catch (error) {}\n    }\n\n    fetchTrending();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  const toggleCastVisible = () => {\n    setCastVisible(castVisible => !castVisible);\n  };\n\n  const { poster_path, title, vote_average, overview, genres } = responseData;\n\n  return (\n    <div>\n      <DescriptionContainer>\n        <TumbForBtnNImg>\n          <GoBackLink to={backLinkLocationRef.current}>Go back</GoBackLink>\n          {poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n              alt={title}\n              width={240}\n            />\n          )}\n        </TumbForBtnNImg>\n        <AboutFilmContainer>\n          <h2>{title}</h2>\n          <p>Uesr score: {vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {genres &&\n            genres.map(({ name, id }) => {\n              return <p key={id}>{name}</p>;\n            })}\n        </AboutFilmContainer>\n      </DescriptionContainer>\n      <CastReviewsContainer>\n        <h3>Additioanal information</h3>\n        <ul>\n          <li>\n            <Link to={'cast'} onClick={toggleCastVisible}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={'reviews'} onClick={toggleCastVisible}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </CastReviewsContainer>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["DescriptionContainer","styled","TumbForBtnNImg","GoBackLink","Link","AboutFilmContainer","CastReviewsContainer","location","useLocation","backLinkLocationRef","useRef","state","from","useState","responseData","setResponseData","movieId","useParams","castVisible","setCastVisible","console","log","useEffect","controller","AbortController","axios","Number","signal","response","data","api_key","fetchTrending","abort","toggleCastVisible","poster_path","title","vote_average","overview","genres","to","current","src","alt","width","map","name","id","onClick","Suspense","fallback","Loader"],"sourceRoot":""}