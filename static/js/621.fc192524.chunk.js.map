{"version":3,"file":"static/js/621.fc192524.chunk.js","mappings":"4QAEaA,EAAcC,EAAAA,GAAAA,GAAH,mFAMXC,EAAkBD,EAAAA,GAAAA,GAAH,kF,SCgD5B,EAnDgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwCE,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KA4BA,OA3BAC,QAAQC,IAAI,gBAAiBH,IAE7BI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAQd,6GAE2BC,EAAAA,EAAAA,IAAA,iBAAoBC,OAAOX,GAA3B,YAA+C,CACpEY,OAAQJ,EAAWI,SAHzB,OAEUC,EAFV,OAMIT,EAAgBS,EAASC,KAAKC,SANlC,wGARc,sBAoBd,OAjBAL,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBM,QAAS,oCALG,mCAkBdC,GAEO,WACLT,EAAWU,OACZ,CACF,GAAE,CAAClB,KAGF,0BACE,SAACH,EAAD,UACGM,GAAgBA,EAAagB,OAAS,EACrChB,EAAaiB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,UAACxB,EAAD,YACE,uBAAIuB,KACJ,uBAAIC,MAFgBF,EAKzB,KAED,oEAKT,C","sources":["components/reviews/Reviews.styled.js","components/reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const ReviewsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList, ReviewsListItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [responseData, setResponseData] = useState();\n  console.log('responseData:', responseData);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n    axios.defaults.params = {\n      api_key: '75d8b1353cef49a6219d2708694c471e',\n    };\n\n    async function fetchTrending() {\n      try {\n        const response = await axios.get(`/movie/${Number(movieId)}/reviews`, {\n          signal: controller.signal,\n        });\n\n        setResponseData(response.data.results);\n      } catch (error) {}\n    }\n\n    fetchTrending();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <div>\n      <ReviewsList>\n        {responseData && responseData.length > 0 ? (\n          responseData.map(({ id, author, content }) => {\n            return (\n              <ReviewsListItem key={id}>\n                <b>{author}</b>\n                <p>{content}</p>\n              </ReviewsListItem>\n            );\n          })\n        ) : (\n          <p>We don't have reviews for tihs movie.</p>\n        )}\n      </ReviewsList>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","styled","ReviewsListItem","movieId","useParams","useState","responseData","setResponseData","console","log","useEffect","controller","AbortController","axios","Number","signal","response","data","results","api_key","fetchTrending","abort","length","map","id","author","content"],"sourceRoot":""}