{"version":3,"file":"static/js/445.c15d22bd.chunk.js","mappings":"iOAoEA,UAhEe,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAoBF,EAAaG,IAAI,cAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAa,IAAIC,gBAoBvB,OAlBAC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,MAAM,GAAD,OAAKP,IARE,mCAqBdQ,GAEO,WACLL,EAAWM,OACZ,CAxB6B,CADhB,wCAWd,6GAE2BJ,EAAAA,EAAAA,IAAU,gBAAiB,CAChDK,OAAQP,EAAWO,SAHzB,OAEUC,EAFV,OAMIf,EAAgBe,EAASC,KAAKC,SANlC,wGAXc,sBA0Bf,GAAE,CAACb,IASJ,OACE,4BACE,kBAAMc,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfnB,EAAgB,CAAEoB,UAAWF,EAAKG,SAASD,UAAUE,QACrDJ,EAAKK,OACN,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,cACxB,mBAAQD,KAAK,SAAb,uBAED5B,IACC,wBACGA,EAAa8B,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACvB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMtC,GAA1C,SACGmC,KAFID,EAMZ,QAKV,C","sources":["pages/movies/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [responseData, setResponseData] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchByFilmsName = searchParams.get('filmsname');\n\n  useEffect(() => {\n    if (!searchByFilmsName) return;\n\n    const controller = new AbortController();\n\n    axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n    axios.defaults.params = {\n      api_key: '75d8b1353cef49a6219d2708694c471e',\n      query: `${searchByFilmsName}`,\n    };\n\n    async function fetchTrending() {\n      try {\n        const response = await axios.get('/search/movie', {\n          signal: controller.signal,\n        });\n\n        setResponseData(response.data.results);\n      } catch (error) {}\n    }\n\n    fetchTrending();\n\n    return () => {\n      controller.abort();\n    };\n  }, [searchByFilmsName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ filmsname: form.elements.filmsname.value });\n    form.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"filmname\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {responseData && (\n        <ul>\n          {responseData.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["location","useLocation","useState","responseData","setResponseData","useSearchParams","searchParams","setSearchParams","searchByFilmsName","get","useEffect","controller","AbortController","axios","api_key","query","fetchTrending","abort","signal","response","data","results","onSubmit","e","preventDefault","form","currentTarget","filmsname","elements","value","reset","type","name","map","id","title","to","state","from"],"sourceRoot":""}