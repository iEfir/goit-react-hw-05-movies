{"version":3,"file":"static/js/115.699b433a.chunk.js","mappings":"4QAEaA,EAAWC,EAAAA,GAAAA,GAAH,mFAMRC,EAAeD,EAAAA,GAAAA,GAAH,kF,SCoDzB,EAvDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwCE,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KA4BA,OA3BAC,QAAQC,IAAI,gBAAiBH,IAE7BI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAQd,6GAE2BC,EAAAA,EAAAA,IAAA,iBAAoBC,OAAOX,GAA3B,YAA+C,CACpEY,OAAQJ,EAAWI,SAHzB,OAEUC,EAFV,OAMIT,EAAgBS,EAASC,KAAKC,MANlC,wGARc,sBAoBd,OAjBAL,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBM,QAAS,oCALG,mCAkBdC,GAEO,WACLT,EAAWU,OACZ,CACF,GAAE,CAAClB,KAGF,0BACE,SAACH,EAAD,UACGM,GACCA,EAAagB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACvC,OACE,UAACxB,EAAD,WACGwB,IACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,EACLK,MAAO,OAGX,uBAAIL,KACJ,4CAAkBC,OATDF,EAYtB,OAIV,C","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const CastListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { CastList, CastListItem } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [responseData, setResponseData] = useState();\n  console.log('responseData:', responseData);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n    axios.defaults.params = {\n      api_key: '75d8b1353cef49a6219d2708694c471e',\n    };\n\n    async function fetchTrending() {\n      try {\n        const response = await axios.get(`/movie/${Number(movieId)}/credits`, {\n          signal: controller.signal,\n        });\n\n        setResponseData(response.data.cast);\n      } catch (error) {}\n    }\n\n    fetchTrending();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <div>\n      <CastList>\n        {responseData &&\n          responseData.map(({ id, name, character, profile_path }) => {\n            return (\n              <CastListItem key={id}>\n                {profile_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                    alt={name}\n                    width={100}\n                  />\n                )}\n                <p>{name}</p>\n                <p>{`Character: ${character}`}</p>\n              </CastListItem>\n            );\n          })}\n      </CastList>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","CastListItem","movieId","useParams","useState","responseData","setResponseData","console","log","useEffect","controller","AbortController","axios","Number","signal","response","data","cast","api_key","fetchTrending","abort","map","id","name","character","profile_path","src","alt","width"],"sourceRoot":""}